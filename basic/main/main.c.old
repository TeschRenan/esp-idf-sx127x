#include <stdio.h>
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"
#include "esp_log.h"
#include "lora.h"

#if CONFIG_SENDER
void task_tx(void *pvParameters)
{
	ESP_LOGI(pcTaskGetName(NULL), "Start");
	uint8_t buf[256]; // Maximum Payload size of SX1276/77/78/79 is 255
	while(1) {
		TickType_t nowTick = xTaskGetTickCount();
		int send_len = sprintf((char *)buf,"Hello World!! %d",nowTick);
		lora_send_packet(buf, send_len);
		ESP_LOGI(pcTaskGetName(NULL), "%d byte packet sent...", send_len);
		vTaskDelay(pdMS_TO_TICKS(5000));
	}
}
#endif // CONFIG_SENDER

#if CONFIG_RECEIVER
void task_rx(void *pvParameters)
{
  ESP_LOGI(pcTaskGetName(NULL), "Start");
  uint8_t buf[256]; // Maximum Payload size of SX1276/77/78/79 is 255
	while(1) {
    lora_receive(); // put into receive mode
    while(lora_received()) {
      int receive_len = lora_receive_packet(buf, sizeof(buf));
      ESP_LOGI(pcTaskGetName(NULL), "%d byte packet received:[%.*s]", receive_len, receive_len, buf);
      lora_receive();
    }
    vTaskDelay(1); // Avoid WatchDog alerts
  }
}
#endif // CONFIG_RECEIVER

void app_main()
{
	lora_init();
#if CONFIG_433MHZ
	ESP_LOGI(pcTaskGetName(NULL), "Frequency is 433MHz");
	lora_set_frequency(433e6); // 433MHz
#endif
#if CONFIG_866MHZ
	ESP_LOGI(pcTaskGetName(NULL), "Frequency is 866MHz");
	lora_set_frequency(866e6); // 866MHz
#endif
#if CONFIG_915MHZ
	ESP_LOGI(pcTaskGetName(NULL), "Frequency is 915MHz");
	lora_set_frequency(915e6); // 915MHz
#endif

	lora_enable_crc();

#if CONFIG_SENDER
	xTaskCreate(&task_tx, "task_tx", 1024*2, NULL, 5, NULL);
#endif
#if CONFIG_RECEIVER
	xTaskCreate(&task_rx, "task_rx", 1024*2, NULL, 5, NULL);
#endif
}
